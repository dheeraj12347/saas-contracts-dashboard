{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user7669\\\\OneDrive - Darshan Education Foundation\\\\Desktop\\\\saas-contracts-dashboard\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      setUser({\n        username: localStorage.getItem('username')\n      });\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    if (password === 'test123') {\n      const mockToken = 'mock-jwt-token-' + Date.now();\n      localStorage.setItem('token', mockToken);\n      localStorage.setItem('username', username);\n      setIsAuthenticated(true);\n      setUser({\n        username\n      });\n      return {\n        success: true\n      };\n    }\n    return {\n      success: false,\n      error: 'Invalid credentials'\n    };\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","token","localStorage","getItem","username","login","password","mockToken","Date","now","setItem","success","error","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user7669/OneDrive - Darshan Education Foundation/Desktop/saas-contracts-dashboard/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      setUser({ username: localStorage.getItem('username') });\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    if (password === 'test123') {\r\n      const mockToken = 'mock-jwt-token-' + Date.now();\r\n      localStorage.setItem('token', mockToken);\r\n      localStorage.setItem('username', username);\r\n      setIsAuthenticated(true);\r\n      setUser({ username });\r\n      return { success: true };\r\n    }\r\n    return { success: false, error: 'Invalid credentials' };\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EAC7D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTL,kBAAkB,CAAC,IAAI,CAAC;MACxBE,OAAO,CAAC;QAAEM,QAAQ,EAAEF,YAAY,CAACC,OAAO,CAAC,UAAU;MAAE,CAAC,CAAC;IACzD;IACAH,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAG,MAAAA,CAAOD,QAAQ,EAAEE,QAAQ,KAAK;IAC1C,IAAIA,QAAQ,KAAK,SAAS,EAAE;MAC1B,MAAMC,SAAS,GAAG,iBAAiB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MAChDP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEH,SAAS,CAAC;MACxCL,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAEN,QAAQ,CAAC;MAC1CR,kBAAkB,CAAC,IAAI,CAAC;MACxBE,OAAO,CAAC;QAAEM;MAAS,CAAC,CAAC;MACrB,OAAO;QAAEO,OAAO,EAAE;MAAK,CAAC;IAC1B;IACA,OAAO;MAAEA,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAsB,CAAC;EACzD,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,UAAU,CAAC;IACnClB,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMiB,KAAK,GAAG;IACZpB,eAAe;IACfE,IAAI;IACJQ,KAAK;IACLQ,MAAM;IACNd;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EAChCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,GAAA,CA9CWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}