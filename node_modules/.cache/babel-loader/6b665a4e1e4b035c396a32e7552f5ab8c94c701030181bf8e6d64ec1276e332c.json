{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user7669\\\\OneDrive - Darshan Education Foundation\\\\Desktop\\\\saas-contracts-dashboard\\\\src\\\\contexts\\\\ContractsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/ContractsContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContractsContext = /*#__PURE__*/createContext();\nexport const useContracts = () => {\n  _s();\n  const context = useContext(ContractsContext);\n  if (!context) {\n    throw new Error('useContracts must be used within ContractsProvider');\n  }\n  return context;\n};\n_s(useContracts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ContractsProvider = ({\n  children\n}) => {\n  _s2();\n  const [contracts, setContracts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    search: '',\n    status: 'All',\n    risk: 'All'\n  });\n  const fetchContracts = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('/contracts.json');\n      if (!response.ok) throw new Error('Failed to fetch contracts');\n      const data = await response.json();\n      setContracts(data.contracts);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getContractById = id => {\n    return contracts.find(contract => contract.id === id);\n  };\n  const getFilteredContracts = () => {\n    return contracts.filter(contract => {\n      const matchesSearch = contract.name.toLowerCase().includes(filters.search.toLowerCase()) || contract.parties.toLowerCase().includes(filters.search.toLowerCase());\n      const matchesStatus = filters.status === 'All' || contract.status === filters.status;\n      const matchesRisk = filters.risk === 'All' || contract.risk === filters.risk;\n      return matchesSearch && matchesStatus && matchesRisk;\n    });\n  };\n  useEffect(() => {\n    fetchContracts();\n  }, []);\n  const value = {\n    contracts,\n    loading,\n    error,\n    filters,\n    setFilters,\n    fetchContracts,\n    getContractById,\n    getFilteredContracts\n  };\n  return /*#__PURE__*/_jsxDEV(ContractsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s2(ContractsProvider, \"lYNG5kRj/2NG5fcwpPAQcwlRwUQ=\");\n_c = ContractsProvider;\nvar _c;\n$RefreshReg$(_c, \"ContractsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ContractsContext","useContracts","_s","context","Error","ContractsProvider","children","_s2","contracts","setContracts","loading","setLoading","error","setError","filters","setFilters","search","status","risk","fetchContracts","response","fetch","ok","data","json","err","message","getContractById","id","find","contract","getFilteredContracts","filter","matchesSearch","name","toLowerCase","includes","parties","matchesStatus","matchesRisk","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user7669/OneDrive - Darshan Education Foundation/Desktop/saas-contracts-dashboard/src/contexts/ContractsContext.js"],"sourcesContent":["// src/contexts/ContractsContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ContractsContext = createContext();\r\n\r\nexport const useContracts = () => {\r\n  const context = useContext(ContractsContext);\r\n  if (!context) {\r\n    throw new Error('useContracts must be used within ContractsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ContractsProvider = ({ children }) => {\r\n  const [contracts, setContracts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    search: '',\r\n    status: 'All',\r\n    risk: 'All'\r\n  });\r\n\r\n  const fetchContracts = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('/contracts.json');\r\n      if (!response.ok) throw new Error('Failed to fetch contracts');\r\n      const data = await response.json();\r\n      setContracts(data.contracts);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getContractById = (id) => {\r\n    return contracts.find(contract => contract.id === id);\r\n  };\r\n\r\n  const getFilteredContracts = () => {\r\n    return contracts.filter(contract => {\r\n      const matchesSearch = contract.name.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n                           contract.parties.toLowerCase().includes(filters.search.toLowerCase());\r\n      const matchesStatus = filters.status === 'All' || contract.status === filters.status;\r\n      const matchesRisk = filters.risk === 'All' || contract.risk === filters.risk;\r\n      \r\n      return matchesSearch && matchesStatus && matchesRisk;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContracts();\r\n  }, []);\r\n\r\n  const value = {\r\n    contracts,\r\n    loading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    fetchContracts,\r\n    getContractById,\r\n    getFilteredContracts\r\n  };\r\n\r\n  return (\r\n    <ContractsContext.Provider value={value}>\r\n      {children}\r\n    </ContractsContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,gBAAgB,gBAAGN,aAAa,CAAC,CAAC;AAExC,OAAO,MAAMO,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,OAAO,GAAGR,UAAU,CAACK,gBAAgB,CAAC;EAC5C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,YAAY;AAQzB,OAAO,MAAMI,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC;IACrCoB,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCR,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;MAC/C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIlB,KAAK,CAAC,2BAA2B,CAAC;MAC9D,MAAMmB,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCf,YAAY,CAACc,IAAI,CAACf,SAAS,CAAC;IAC9B,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZZ,QAAQ,CAACY,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRf,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMgB,eAAe,GAAIC,EAAE,IAAK;IAC9B,OAAOpB,SAAS,CAACqB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACF,EAAE,KAAKA,EAAE,CAAC;EACvD,CAAC;EAED,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;IACjC,OAAOvB,SAAS,CAACwB,MAAM,CAACF,QAAQ,IAAI;MAClC,MAAMG,aAAa,GAAGH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,OAAO,CAACE,MAAM,CAACmB,WAAW,CAAC,CAAC,CAAC,IACnEL,QAAQ,CAACO,OAAO,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACtB,OAAO,CAACE,MAAM,CAACmB,WAAW,CAAC,CAAC,CAAC;MAC1F,MAAMG,aAAa,GAAGxB,OAAO,CAACG,MAAM,KAAK,KAAK,IAAIa,QAAQ,CAACb,MAAM,KAAKH,OAAO,CAACG,MAAM;MACpF,MAAMsB,WAAW,GAAGzB,OAAO,CAACI,IAAI,KAAK,KAAK,IAAIY,QAAQ,CAACZ,IAAI,KAAKJ,OAAO,CAACI,IAAI;MAE5E,OAAOe,aAAa,IAAIK,aAAa,IAAIC,WAAW;IACtD,CAAC,CAAC;EACJ,CAAC;EAED1C,SAAS,CAAC,MAAM;IACdsB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqB,KAAK,GAAG;IACZhC,SAAS;IACTE,OAAO;IACPE,KAAK;IACLE,OAAO;IACPC,UAAU;IACVI,cAAc;IACdQ,eAAe;IACfI;EACF,CAAC;EAED,oBACEhC,OAAA,CAACC,gBAAgB,CAACyC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAlC,QAAA,EACrCA;EAAQ;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACtC,GAAA,CA5DWF,iBAAiB;AAAAyC,EAAA,GAAjBzC,iBAAiB;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}